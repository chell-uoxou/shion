openapi: 3.1.0
info:
  title: Shion API
  version: 0.1.0
paths:
  /health:
    get:
      summary: Health check
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
  /practice/users:
    get:
      summary: Get users
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
    post:
      summary: Create dummy user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"

  /me:
    get:
      summary: Get current logged-in user
      security:
        - cookieAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized

  /memories:
    post:
      summary: Create a new memory with related friends
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                note:
                  type: string
                location:
                  type: string
                occurred_at:
                  type: string
                  format: date-time
                friends:
                  type: array
                  description: 関連付ける友達と理由
                  items:
                    type: object
                    properties:
                      friend_id:
                        type: integer
                      reason_note:
                        type: string
            required:
              - title
      responses:
        "201":
          description: Memory created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Memory"
        "401":
          description: Unauthorized

  /memories/{id}:
    get:
      summary: Get a specific memory
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Memory found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Memory"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden (not owned by current user)
        "404":
          description: Not found
    put:
      summary: Update a memory
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                note:
                  type: string
                location:
                  type: string
              required:
                - title
      responses:
        "200":
          description: Memory updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Memory"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden (not owned by current user)
        "404":
          description: Not found
    delete:
      summary: Delete a memory (soft delete)
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Deleted successfully
        "401":
          description: Unauthorized
        "403":
          description: Forbidden (not owned by current user)
        "404":
          description: Not found

  /friends:
    get:
      summary: List friends of the logged-in user
      security:
        - cookieAuth: []
      responses:
        "200":
          description: List of friends
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Friend"
        "401":
          description: Unauthorized
    post:
      summary: Create a new friend
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                display_name:
                  type: string
                note:
                  type: string
                avatar_color:
                  type: string
                avatar_icon:
                  type: string
              required:
                - display_name
      responses:
        "201":
          description: Friend created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Friend"
        "401":
          description: Unauthorized

  /friends/{id}:
    get:
      summary: Get a specific friend
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Friend found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Friend"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden (not owned by current user)
        "404":
          description: Not found
    put:
      summary: Update a friend
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                display_name:
                  type: string
                note:
                  type: string
                avatar_color:
                  type: string
                avatar_icon:
                  type: string
              required:
                - display_name
      responses:
        "200":
          description: Friend updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Friend"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden (not owned by current user)
        "404":
          description: Not found
    delete:
      summary: Delete a friend (soft delete)
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Deleted successfully
        "401":
          description: Unauthorized
        "403":
          description: Forbidden (not owned by current user)
        "404":
          description: Not found

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: app_token
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        avatar_url:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Memory:
      type: object
      properties:
        id:
          type: integer
        created_by:
          type: integer
        title:
          type: string
        note:
          type: string
        location:
          type: string
        occurred_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          format: date-time
          nullable: true
        friends:
          type: array
          items:
            type: object
            properties:
              friend_id:
                type: integer
              reason_note:
                type: string
    Friend:
      type: object
      properties:
        id:
          type: integer
        created_by:
          type: integer
        display_name:
          type: string
        note:
          type: string
        avatar_color:
          type: string
        avatar_icon:
          type: string
        last_selected_at:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          format: date-time
          nullable: true
